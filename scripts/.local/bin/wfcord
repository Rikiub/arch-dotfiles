#!/usr/bin/env sh

VIDEO_DIR="$(xdg-user-dir VIDEOS)/record_$(date +%Y-%-m-%-d_%-H-%-M-%-S)"
EXT="mkv"
MSG_TAG="wf-recorder"

# if wf-recorder is running, stop it and send a message to Waybar
if [ -n "$(pgrep wf-recorder)" ]; then
	echo "Stopping the current recording and saving it..."
    killall -s SIGINT wf-recorder
    while pgrep -x wf-recorder > /dev/null; do 
        wait
    done
    
    # send exit signal to Waybar
    pkill -RTMIN+8 waybar
    
    notify-send -a "$MSG_TAG" -i media-stop -u low \
    "Recording completed" "$VIDEO_DIR.$EXT" \
    -h string:x-canonical-private-synchronous:"$MSG_TAG"
    exit
fi

# check and show help message
if [ $# -eq 0 ] || [ "$1" = "help" ] || [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
	echo "Usage: wlrecord [region|window|output] [mkv|gif]"
	exit
fi

# check record mode
if [ "$1" = "region" ]; then
    WF_MODE="-g $(slurp)"
elif [ "$1" = "output" ]; then
	WF_MODE="swaymsg -t get_tree | jq -r '.nodes[] | select([recurse(.nodes[]?, .floating_nodes[]?) | .focused] | any) | .name'"
elif [ "$1" = "window" ]; then
    WF_MODE="-g $(swaymsg -t get_tree | jq -r '.. | select(.pid? and .visible?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"' | slurp )"
else
    # if not arguments, exit
    echo "ERROR: Second argument must be [region|window|output]"
    exit 1
fi

# cant you select a area? error got
if [ $? -ne 0 ]; then
    echo "ERROR: slurp selection failed"
    
    notify-send "Failed to record" "Area not selected" -a "$MSG_TAG" -i dialog-error -u low \
	-h string:x-canonical-private-synchronous:"$MSG_TAG"
    
    exit 1
fi

# check ext format
if [ "$2" = "mkv" ]; then
    WF_EXT="-f $VIDEO_DIR.mkv"
elif [ "$2" = "gif" ]; then
    WF_EXT="-f $VIDEO_DIR.gif -c gif"
else
    # if not arguments, exit
    echo "ERROR: Third argument must be [mkv|gif]"
    exit 1
fi

if [ $# -eq 3 ]; then
	echo "Too many arguments. You cannot provide more than two arguments."
	exit 1
fi

# start to recording
wf-recorder $WF_EXT "$WF_MODE" >/dev/null 2>&1 &

echo "Recording started"

notify-send "Recording started" -a "$MSG_TAG" -i media-record -u low \
-h string:x-canonical-private-synchronous:"$MSG_TAG"

# send enter signal to Waybar
pkill -RTMIN+8 waybar
