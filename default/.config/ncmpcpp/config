##### directories ######
##
## Directory for storing ncmpcpp related files.
## Changing it is useful if you want to store
## everything somewhere else and provide command
## line setting for alternative location to config
## file which defines that while launching ncmpcpp.
##
#ncmpcpp_directory = "~/.ncmpcpp"
##
## Directory for storing downloaded lyrics. It
## defaults to ~/.lyrics since other MPD clients
## (eg. ncmpc) also use that location.
##
#lyrics_directory = "~/.lyrics"

mpd_crossfade_time = 5

lyrics_fetchers = azlyrics, metrolyrics, musixmatch, genius, sing365, justsomelyrics, jahlyrics, plyrics, tekstowo, zeneszoveg, internet

autocenter_mode = yes
centered_cursor = yes

volume_normalization "yes"

# FIFO visualizer
visualizer_data_source = /tmp/mpd.fifo
visualizer_output_name = "FIFO"
visualizer_in_stereo = yes

# Available values: spectrum, wave, wave_filled, ellipse.
visualizer_type = ellipse
visualizer_look = ●▮

# Layout Customization

song_columns_list_format = (40)[yellow]{t|f:Title} (30)[green]{a} (7f)[blue]{l}

## browser_sort_mode are "type", "name", "mtime", "format" and "none".
browser_sort_mode = name
browser_sort_format = {%a - }{%t}|{%f} {%l}

## Available values: classic, alternative.
user_interface = alternative

progressbar_look = "▄▄▄"
#progressbar_look = =>

titles_visibility = no
header_visibility = no
statusbar_visibility = yes

now_playing_prefix = "$b$2 ♫"
now_playing_suffix = "$/b$9"
mouse_support = yes
#execute_on_song_change = "notify-send "󰝚  Now playing:" "$(ncmpcpp --quiet --current-song="{%a - }{%t}|{%f}")""

startup_screen = "playlist"
#startup_slave_screen = "visualizer"

# Colors
colors_enabled                 = "yes"
empty_tag_color                = "cyan"
volume_color                   = "cyan"
state_line_color               = "black"
state_flags_color              = "magenta"
main_window_color              = "yellow"
color1                         = "white"
color2                         = "black"
current_item_prefix            = "$(yellow)$r"
current_item_suffix            = "$/r$(end)"
#progressbar_color              = "red"
current_item_inactive_column_prefix = "$(white)$r"
current_item_inactive_column_suffix = "$/r$(end)"

## Note: You can choose default search mode for search engine. Available modes
## are:
##
## - 1 - use mpd built-in searching (no regexes, pattern matching)
##
## - 2 - use ncmpcpp searching (pattern matching with support for regexes, but
##       if your mpd is on a remote machine, downloading big database to process
##       it can take a while
##
## - 3 - match only exact values (this mode uses mpd function for searching in
##       database and local one for searching in current playlist)
##
#
search_engine_default_search_mode = 3

##### song format #####
##
## For a song format you can use:
##
## %l - length
## %f - filename
## %D - directory
## %a - artist
## %A - album artist
## %t - title
## %b - album
## %y - date
## %n - track number (01/12 -> 01)
## %N - full track info (01/12 -> 01/12)
## %g - genre
## %c - composer
## %p - performer
## %d - disc
## %C - comment
## %P - priority
## $R - begin right alignment
##
## If you want to make sure that a part of the format is displayed
## only when certain tags are present, you can archieve it by
## grouping them with brackets, e.g. '{%a - %t}' will be evaluated
## to 'ARTIST - TITLE' if both tags are present or '' otherwise.
## It is also possible to define a list of alternatives by providing
## several groups and separating them with '|', e.g. '{%t}|{%f}'
## will be evaluated to 'TITLE' or 'FILENAME' if the former is not
## present.
##
## Note: If you want to set limit on maximal length of a tag, just
## put the appropriate number between % and character that defines
## tag type, e.g. to make album take max. 20 terminal cells, use '%20b'.
##
## In addition, formats support markers used for text attributes.
## They are followed by character '$'. After that you can put:
##
## - 0 - default window color (discards all other colors)
## - 1 - black
## - 2 - red
## - 3 - green
## - 4 - yellow
## - 5 - blue
## - 6 - magenta
## - 7 - cyan
## - 8 - white
## - 9 - end of current color
## - b - bold text
## - u - underline text
## - r - reverse colors
## - a - use alternative character set
##
## If you don't want to use a non-color attribute anymore, just put it
## again, but this time insert character '/' between '$' and attribute
## character, e.g. {$b%t$/b}|{$r%f$/r} will display bolded title tag
## or filename with reversed colors.
##
## If you want to use 256 colors and/or background colors in formats
## (the naming scheme is described below in section about color
## definitions), it can be done with the syntax $(COLOR), e.g. to set
## the artist tag to one of the non-standard colors and make it have
## yellow background, you need to write $(197_yellow)%a$(end). Note
## that for standard colors this is interchangable with attributes
## listed above.
##
## Note: colors can be nested.
